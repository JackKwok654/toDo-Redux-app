{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\85251\\\\Desktop\\\\React\\\\toDo-Redux-app\\\\src\\\\components\\\\TodoList.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // Component 部分值的注意的是 todos state 是透過 map function 去迭代出元素，由於要讓 React JSX 可以渲染並保持傳入觸發 event state 的 immutable，所以需使用 toJS() 轉換 component of array。\n\nconst TodoList = ({\n  todos,\n  onDeleteTodo\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, todos.map((todo, index) => /*#__PURE__*/React.createElement(\"li\", {\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, todo.text, /*#__PURE__*/React.createElement(\"button\", {\n  onClick: onDeleteTodo(index),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 11\n  }\n}, \"X\"))).toJS()));\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/85251/Desktop/React/toDo-Redux-app/src/components/TodoList.js"],"names":["React","ReactDOM","TodoList","todos","onDeleteTodo","map","todo","index","text","toJS"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,KADgB;AAEhBC,EAAAA;AAFgB,CAAD,kBAIf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEED,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACR;AAAI,EAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,IAAI,CAACE,IADR,eAEE;AAAQ,EAAA,OAAO,EAAEJ,YAAY,CAACG,KAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,CADF,EAKGE,IALH,EAFF,CADF,CAJF;;AAkBA,eAAeP,QAAf","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// Component 部分值的注意的是 todos state 是透過 map function 去迭代出元素，由於要讓 React JSX 可以渲染並保持傳入觸發 event state 的 immutable，所以需使用 toJS() 轉換 component of array。\r\nconst TodoList = ({\r\n  todos,\r\n  onDeleteTodo,\r\n}) => (\r\n  <div>\r\n    <ul>\r\n    {\r\n      todos.map((todo, index) => (\r\n        <li key={index}>\r\n          {todo.text}\r\n          <button onClick={onDeleteTodo(index)}>X</button>\r\n        </li>\r\n      )).toJS()\r\n    }\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}