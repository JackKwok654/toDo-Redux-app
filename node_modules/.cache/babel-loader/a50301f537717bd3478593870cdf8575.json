{"ast":null,"code":"import { handleActions } from 'redux-actions';\nimport { TodoState } from '../../constants/models';\nimport { CREATE_TODO, DELETE_TODO, CHANGE_TEXT } from '../../constants/actionTypes';\nconst todoReducers = handleActions({\n  CREATE_TODO: state => {\n    let todos = state.get('todos').push(state.get('todo'));\n    return state.set('todos', todos);\n  },\n  DELETE_TODO: (state, {\n    payload\n  }) => state.set('todos', state.get('todos').splice(payload.index, 1)),\n  CHANGE_TEXT: (state, {\n    payload\n  }) => state.merge({\n    'todo': payload\n  })\n}, TodoState);\nexport default todoReducers;","map":{"version":3,"sources":["C:/Users/85251/Desktop/React/toDo-Redux-app/src/reducers/data/todoReducers.js"],"names":["handleActions","TodoState","CREATE_TODO","DELETE_TODO","CHANGE_TEXT","todoReducers","state","todos","get","push","set","payload","splice","index","merge"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,SACEC,WADF,EAEEC,WAFF,EAGEC,WAHF,QAIO,6BAJP;AAMC,MAAMC,YAAY,GAAGL,aAAa,CAAC;AAClCE,EAAAA,WAAW,EAAGI,KAAD,IAAW;AACtB,QAAIC,KAAK,GAAGD,KAAK,CAACE,GAAN,CAAU,OAAV,EAAmBC,IAAnB,CAAwBH,KAAK,CAACE,GAAN,CAAU,MAAV,CAAxB,CAAZ;AACA,WAAOF,KAAK,CAACI,GAAN,CAAU,OAAV,EAAmBH,KAAnB,CAAP;AACD,GAJiC;AAKlCJ,EAAAA,WAAW,EAAE,CAACG,KAAD,EAAQ;AAAEK,IAAAA;AAAF,GAAR,KACXL,KAAK,CAACI,GAAN,CAAU,OAAV,EAAmBJ,KAAK,CAACE,GAAN,CAAU,OAAV,EAAmBI,MAAnB,CAA0BD,OAAO,CAACE,KAAlC,EAAyC,CAAzC,CAAnB,CANgC;AAQlCT,EAAAA,WAAW,EAAE,CAACE,KAAD,EAAQ;AAAEK,IAAAA;AAAF,GAAR,KACXL,KAAK,CAACQ,KAAN,CAAY;AAAE,YAAQH;AAAV,GAAZ;AATgC,CAAD,EAWhCV,SAXgC,CAAlC;AAaD,eAAeI,YAAf","sourcesContent":["import { handleActions } from 'redux-actions';\r\nimport { TodoState } from '../../constants/models';\r\n\r\nimport {\r\n  CREATE_TODO,\r\n  DELETE_TODO,\r\n  CHANGE_TEXT,\r\n} from '../../constants/actionTypes';\r\n\r\n const todoReducers = handleActions({\r\n  CREATE_TODO: (state) => {\r\n    let todos = state.get('todos').push(state.get('todo'));\r\n    return state.set('todos', todos)\r\n  },\r\n  DELETE_TODO: (state, { payload }) => (\r\n    state.set('todos', state.get('todos').splice(payload.index, 1))\r\n  ),\r\n  CHANGE_TEXT: (state, { payload }) => (\r\n    state.merge({ 'todo': payload })\r\n  )\r\n}, TodoState);\r\n\r\nexport default todoReducers;"]},"metadata":{},"sourceType":"module"}